version: '3'
services:
  mongodb:
    container_name: mongodb-${teamname:-defaultASW}
    image: mongo
    profiles: [ "dev", "prod" ]
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - mynetwork

  questionMongodb:
    container_name: mongodb-${teamname:-defaultASW}
    image: mongo
    profiles: [ "dev", "prod" ]
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27018:27018"
    networks:
      - mynetwork

  authservice:
    container_name: authservice-${teamname:-defaultASW}
    image: ghcr.io/arquisoft/wiq_en3b/authservice:latest
    profiles: [ "dev", "prod" ]
    build: ./users/authservice
    depends_on:
      - mongodb
    ports:
      - "8002:8002"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb

  userservice:
    container_name: userservice-${teamname:-defaultASW}
    image: ghcr.io/arquisoft/wiq_en3b/userservice:latest
    profiles: [ "dev", "prod" ]
    build: ./users/userservice
    depends_on:
      - mongodb
    ports:
      - "8001:8001"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb

  historyservice:
    container_name: historyservice-${teamname:-defaultASW}
    image: ghcr.io/arquisoft/wiq_en3b/historyservice:latest
    profiles: [ "dev", "prod" ]
    build: ./users/historyservice
    depends_on:
      - mongodb
    ports:
      - "8003:8003"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27017/userdb

  questionservice:
    container_name: questionservice-${teamname:-defaultASW}
    image: ghcr.io/arquisoft/wiq_en3b/questionservice:latest
    profiles: [ "dev", "prod" ]
    build: ./questions/questionservice
    depends_on:
      - questionMongodb
    ports:
      - "8004:8004"
    networks:
      - mynetwork
    environment:
      MONGODB_URI: mongodb://mongodb:27018/questiondb

  gatewayservice:
    container_name: gatewayservice-${teamname:-defaultASW}
    image: ghcr.io/arquisoft/wiq_en3b/gatewayservice:latest
    profiles: [ "dev", "prod" ]
    build: ./gatewayservice
    depends_on:
      - mongodb
      - questionMongodb
      - userservice
      - authservice
      - historyservice
      - questionservice
    ports:
      - "8000:8000"
    networks:
      - mynetwork
    environment:
      QUESTION_SERVICE_URL: http://questionservice:8004
      HISTORY_SERVICE_URL: http://historyservice:8003
      AUTH_SERVICE_URL: http://authservice:8002
      USER_SERVICE_URL: http://userservice:8001

  webapp:
    container_name: webapp-${teamname:-defaultASW}
    image: ghcr.io/arquisoft/wiq_en3b/webapp:latest
    profiles: [ "dev", "prod" ]
    build: ./webapp
    depends_on:
      - gatewayservice
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus
    container_name: prometheus-${teamname:-defaultASW}
    profiles: [ "dev" ]
    networks:
      - mynetwork
    volumes:
      - ./gatewayservice/monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - gatewayservice

  grafana:
    image: grafana/grafana
    container_name: grafana-${teamname:-defaultASW}
    profiles: [ "dev" ]
    networks:
      - mynetwork
    volumes:
      - grafana_data:/var/lib/grafana
      - ./gatewayservice/monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SERVER_HTTP_PORT=9091
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "9091:9091"
    depends_on:
      - prometheus

volumes:
  mongodb_data:
  prometheus_data:
  grafana_data:


networks:
  mynetwork:
    driver: bridge
